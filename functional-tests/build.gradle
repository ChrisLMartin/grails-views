buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:views-gradle:1.2.3"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.6.0.RELEASE"
    id 'eclipse'
    id 'idea'
}

version "0.1"
group "functional.tests"

apply plugin: "spring-boot"
apply plugin: "war"
apply plugin: "com.bertramlabs.asset-pipeline"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"

// uncommenting fails because we have functional tests for compilation errors
//apply plugin: "org.grails.plugins.views-json"
//apply plugin: "org.grails.plugins.views-markup"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if(details.requested.group == 'org.grails' && details.requested.name.startsWith('grails-datastore')) {
            details.useVersion("5.0.12.RELEASE")
        }
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"

    compile "org.grails.plugins:hibernate4:5.0.7.BUILD-SNAPSHOT"
    compile "org.grails.plugins:mongodb:5.0.7.BUILD-SNAPSHOT"
    compile "org.grails.plugins:cache"
    compile "org.hibernate:hibernate-ehcache"
    compile "org.grails.plugins:scaffolding"


//    compile "org.grails:grails-datastore-gorm-mongodb:5.0.6.RELEASE"

    compile project(":views-json")
    compile project(":views-markup")
    compile project(":views-functional-tests-plugin")

    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"

    runtime project(":views-json-templates")

    testCompile project(":views-json-testing-support")
    testCompile "org.grails:grails-plugin-testing"

    console "org.grails:grails-console"

    testCompile "io.micronaut:micronaut-http-client:$micronautVersion"
}

integrationTest {
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}
task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}
